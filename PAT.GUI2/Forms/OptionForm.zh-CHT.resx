<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="CheckBox_CheckUpdate.Text" xml:space="preserve">
    <value>運行PAT之前，檢查更新</value>
  </data>
  <data name="Button_DefaultSetting.Text" xml:space="preserve">
    <value>缺省設置</value>
  </data>
  <data name="TabPage_General.Text" xml:space="preserve">
    <value>普通</value>
  </data>
  <data name="CheckBox_TauUrgent.Text" xml:space="preserve">
    <value>在RTS模塊使用最大進度</value>
  </data>
  <data name="Label_DefaultModelingLanguage.Text" xml:space="preserve">
    <value>缺省建模語言</value>
  </data>
  <data name="Button_OK.Text" xml:space="preserve">
    <value>確定</value>
  </data>
  <data name="CheckBox_AutoSave.Text" xml:space="preserve">
    <value>當執行模仿、證明時自動保存模型</value>
  </data>
  <data name="Button_Cancel.Text" xml:space="preserve">
    <value>取消</value>
  </data>
  <data name="CheckBox_LinkWS.Text" xml:space="preserve">
    <value>使用PAT打開WS模型 (* .ws)</value>
  </data>
  <data name="NUD_MC_Initial.ToolTip" xml:space="preserve">
    <value />
  </data>
  <data name="Label_DefaultThreadNumber.Text" xml:space="preserve">
    <value>缺省的服務個數</value>
  </data>
  <data name="Label_SearchUpperBound.Text" xml:space="preserve">
    <value>搜索上限</value>
  </data>
  <data name="CheckBox_EmailSSL.Text" xml:space="preserve">
    <value>使用SSL連接發送郵件</value>
  </data>
  <data name="Label_CutNumberUpperBound.Text" xml:space="preserve">
    <value>參數化的系統中的Cut Number的上限</value>
  </data>
  <data name="NUD_SimulationBound.ToolTip" xml:space="preserve">
    <value>在模擬器中，狀態圖數目的上限。</value>
  </data>
  <data name="$this.Text" xml:space="preserve">
    <value>選項</value>
  </data>
  <data name="Label_InitialCutNumber.Text" xml:space="preserve">
    <value>參數化的系統中的Cut Number初始值</value>
  </data>
  <data name="TabPage_CSP.Text" xml:space="preserve">
    <value>CSP (RTS) 模塊</value>
  </data>
  <data name="CheckBox_PerformDeterminization.Text" xml:space="preserve">
    <value>精化檢驗前進行確定化</value>
  </data>
  <data name="CheckBox_LinkCSP.Text" xml:space="preserve">
    <value>使用PAT打開CSP模型 (*.csp)</value>
  </data>
  <data name="CheckBox_TauUrgent.ToolTip" xml:space="preserve">
    <value>如果一個進程能夠產生一個內部事件，那麼這個內部事件必須立即執行。如果不確定的話不要使用這個功能，因為它有可能會改變你系統行為。</value>
  </data>
  <data name="GroupBox_Simulation.Text" xml:space="preserve">
    <value>模擬</value>
  </data>
  <data name="GroupBox_RTS.Text" xml:space="preserve">
    <value>RTS模塊相關設置</value>
  </data>
  <data name="CheckBox_EmailSSL.ToolTip" xml:space="preserve">
    <value>郵件發送失敗時關閉連接</value>
  </data>
  <data name="CheckBox_LinkRTS.Text" xml:space="preserve">
    <value>使用PAT打開RTS模型 (*.rts)</value>
  </data>
  <data name="TabPage_WSModule.Text" xml:space="preserve">
    <value>WS模型</value>
  </data>
  <data name="Label_SearchInitialSize.Text" xml:space="preserve">
    <value>搜索中哈希表的最初大小</value>
  </data>
  <data name="GroupBox_Verification.Text" xml:space="preserve">
    <value>驗證</value>
  </data>
</root>