<#@ template language="C#" debug="False" hostspecific="true" #>
using PAT.Common.Classes.Assertion;
using PAT.Common.Classes.LTS;
using PAT.Common.Classes.ModuleInterface;
using <# Write(this.Host.ResolveParameterValue("","","LTSNamespace")); #>;

namespace <# Write(this.Host.ResolveParameterValue("","","AssertionsNamespace")); #>
{
    public class <# Write(this.Host.ResolveParameterValue("","","ModuleCode")); #>AssertionDivergence : AssertionDivergence
    {
        private DefinitionRef Process;

        public <# Write(this.Host.ResolveParameterValue("","","ModuleCode")); #>AssertionDivergence(DefinitionRef processDef) : base()
        {
            Process = processDef;
        }

        public override void Initialize(SpecificationBase spec)
        {
            Assertion.Initialize(this, Process, spec);
        }

        public override string StartingProcess
        {
            get
            {
                return Process.ToString();
            }
        }

        //todo: override ToString method if your assertion uses different syntax as PAT
        //public override string ToString()
        //{
        //		return "";
        //}        
        
    }
}