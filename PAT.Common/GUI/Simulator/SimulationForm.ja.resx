<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Button_SpeedFast.Text" xml:space="preserve">
    <value>速い(0.5秒)</value>
  </data>
  <data name="Button_Direction.ToolTip" xml:space="preserve">
    <value>グラフ描画の報告を指定します。Tなら上から下へ、Lなら左から右となります</value>
  </data>
  <data name="columnHeader9.Text" xml:space="preserve">
    <value>送信先プロセス</value>
  </data>
  <data name="Button_GenerateGraph.ToolTipText" xml:space="preserve">
    <value>完全なグラフを生成します</value>
  </data>
  <data name="columnHeader3.Text" xml:space="preserve">
    <value>送信元プロセス</value>
  </data>
  <data name="saveToolStripMenuItem.Text" xml:space="preserve">
    <value>トレースをテキストとして保存します</value>
  </data>
  <data name="Button_DisplayCounterexample.Text" xml:space="preserve">
    <value>反例表示</value>
  </data>
  <data name="From.Text" xml:space="preserve">
    <value>元</value>
  </data>
  <data name="Button_Simulate.Text" xml:space="preserve">
    <value>シミュレーション</value>
  </data>
  <data name="FromState.Text" xml:space="preserve">
    <value>遷移元状態</value>
  </data>
  <data name="columnHeader7.Text" xml:space="preserve">
    <value>イベント</value>
  </data>
  <data name="Button_InteractionPane.Text" xml:space="preserve">
    <value>インタラクション・エリア</value>
  </data>
  <data name="Button_DisplaySCC.Text" xml:space="preserve">
    <value>強く接続されたコンポーネントの表示</value>
  </data>
  <data name="toolStripMenuItem1.Text" xml:space="preserve">
    <value>ここから再生</value>
  </data>
  <data name="Button_CounterExample.ToolTipText" xml:space="preserve">
    <value>反例をハイライトします</value>
  </data>
  <data name="toolStripContainer1.Text" xml:space="preserve">
    <value />
  </data>
  <data name="columnHeader10.Text" xml:space="preserve">
    <value>遷移元状態</value>
  </data>
  <data name="$this.Text" xml:space="preserve">
    <value>シミュレーション</value>
    <comment>finish</comment>
  </data>
  <data name="Button_Reset.Text" xml:space="preserve">
    <value>リセット</value>
  </data>
  <data name="Button_CounterExample.Text" xml:space="preserve">
    <value>反例</value>
  </data>
  <data name="Button_20seconds.Text" xml:space="preserve">
    <value>20秒</value>
  </data>
  <data name="Button_10seconds.Text" xml:space="preserve">
    <value>10秒</value>
  </data>
  <data name="Button_60seconds.Text" xml:space="preserve">
    <value>60秒</value>
  </data>
  <data name="State.Text" xml:space="preserve">
    <value>状態</value>
  </data>
  <data name="columnHeader8.Text" xml:space="preserve">
    <value>遷移先状態</value>
  </data>
  <data name="Button_Stop.Text" xml:space="preserve">
    <value>停止</value>
    <comment>Stop Button Display</comment>
  </data>
  <data name="statusStrip1.Text" xml:space="preserve">
    <value />
  </data>
  <data name="Button_SpeedVerySlow.Text" xml:space="preserve">
    <value>かなり遅い（4秒）</value>
  </data>
  <data name="Button_SpeedNormal.Text" xml:space="preserve">
    <value>通常速度</value>
  </data>
  <data name="Button_SpeedVeryFast.Text" xml:space="preserve">
    <value>かなり速い(0.25秒)</value>
  </data>
  <data name="columnHeader2.Text" xml:space="preserve">
    <value>遷移先</value>
  </data>
  <data name="columnHeader6.Text" xml:space="preserve">
    <value>送信先プロセス</value>
  </data>
  <data name="Button_DataPane.Text" xml:space="preserve">
    <value>データ表示エリア</value>
  </data>
  <data name="Process.Text" xml:space="preserve">
    <value>プロセス</value>
  </data>
  <data name="cpToolStripMenuItem.Text" xml:space="preserve">
    <value>プロセスのコピー</value>
  </data>
  <data name="ListView_EnabledEvents.ToolTip" xml:space="preserve">
    <value>行をダブルクリックするとイベントが有効になります。青い行が現在有効な行です</value>
  </data>
  <data name="Button_Settings.Text" xml:space="preserve">
    <value>設定</value>
  </data>
  <data name="Event.Text" xml:space="preserve">
    <value>イベント</value>
  </data>
  <data name="columnHeader5.Text" xml:space="preserve">
    <value>イベントを有効化</value>
  </data>
  <data name="Button_AnimationSpeed.Text" xml:space="preserve">
    <value>アニメーション速度</value>
  </data>
  <data name="ListView_Trace.ToolTip" xml:space="preserve">
    <value>行をクリックすると、トレースの履歴が表示されます</value>
  </data>
  <data name="Button_StatePane.Text" xml:space="preserve">
    <value />
  </data>
  <data name="InteractionPanel" xml:space="preserve">
    <value>イベントとトレース</value>
    <comment>InteractionPanel Text</comment>
  </data>
  <data name="copyEventToolStripMenuItem.Text" xml:space="preserve">
    <value>イベントのコピー</value>
  </data>
  <data name="Label_Processes.Text" xml:space="preserve">
    <value>プロセス</value>
  </data>
  <data name="Button_Export.Text" xml:space="preserve">
    <value>エクスポート</value>
  </data>
  <data name="columnHeader1.Text" xml:space="preserve">
    <value>イベント</value>
  </data>
  <data name="GroupBox_EventTrace.Text" xml:space="preserve">
    <value>イベントトレース</value>
  </data>
  <data name="hideTauTransitionToolStripMenuItem.Text" xml:space="preserve">
    <value>tau遷移を隠します</value>
  </data>
  <data name="Button_PlayTrace.Text" xml:space="preserve">
    <value>トレース再生</value>
  </data>
  <data name="Button_GenerateGraph.Text" xml:space="preserve">
    <value>グラフの生成</value>
  </data>
  <data name="Button_SpeedSlow.Text" xml:space="preserve">
    <value>遅い（2秒)</value>
  </data>
  <data name="Button_40seconds.Text" xml:space="preserve">
    <value>40秒</value>
  </data>
  <data name="DataStorePanel" xml:space="preserve">
    <value>データ確認</value>
    <comment>DataStorePanel</comment>
  </data>
  <data name="GroupBox_EnabledEvents.Text" xml:space="preserve">
    <value>イベントの有効化</value>
  </data>
  <data name="Button_5seconds.Text" xml:space="preserve">
    <value>5秒</value>
  </data>
  <data name="Button_PopupDelay.Text" xml:space="preserve">
    <value>ツールチップのポップアップ表示の遅延時間</value>
  </data>
  <data name="Button_Direction.Text" xml:space="preserve">
    <value>描画方向</value>
  </data>
  <data name="columnHeader4.Text" xml:space="preserve">
    <value>遷移元状態</value>
  </data>
  <data name="Button_Simulate.ToolTipText" xml:space="preserve">
    <value>ランダム・シミュレーションを実行します</value>
  </data>
</root>