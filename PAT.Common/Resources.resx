<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="SampleEnum_Large" xml:space="preserve">
    <value>Large</value>
  </data>
  <data name="SampleEnum_Medium" xml:space="preserve">
    <value>Medium</value>
  </data>
  <data name="SampleEnum_Small" xml:space="preserve">
    <value>Small</value>
  </data>
  <data name="SampleEnum_VeryLarge" xml:space="preserve">
    <value>Very Large</value>
  </data>
  <data name="SampleEnum_VerySmall" xml:space="preserve">
    <value>Very Small</value>
  </data>
  <data name="Verification_Completed" xml:space="preserve">
    <value>Verification Completed</value>
  </data>
  <data name="Verification_Cancelled" xml:space="preserve">
    <value>Verification Cancelled</value>
  </data>
  <data name="ModelCheckingForm_StartVerification_Verification_Starts" xml:space="preserve">
    <value>Verification Starts...</value>
  </data>
  <data name="Please_select_an_assertion_first" xml:space="preserve">
    <value>Please select an assertion first!</value>
  </data>
  <data name="Result_Generation_Cancelled" xml:space="preserve">
    <value>Result Generation Cancelled</value>
  </data>
  <data name="Select_an_assertion_to_start_with" xml:space="preserve">
    <value>Select an assertion to start with</value>
  </data>
  <data name="Please_wait_for_the_simulation_or_parsing_finished_before_verification" xml:space="preserve">
    <value>Please wait for the simulation or parsing finished before verification</value>
  </data>
  <data name="Runtime_Exception_Happened" xml:space="preserve">
    <value>Runtime Exception Happened</value>
  </data>
  <data name="Exception_happened_during_the_verification" xml:space="preserve">
    <value>Runtime Exception happened during the verification</value>
  </data>
  <data name="Total_transitions_visited_before_the_exception" xml:space="preserve">
    <value>Total transitions visited before the exception:</value>
  </data>
  <data name="Generating_Result" xml:space="preserve">
    <value>Generating Result...</value>
  </data>
  <data name="Verbose_Mode_Selected" xml:space="preserve">
    <value>Verbose Mode Selected</value>
  </data>
  <data name="Normal_Mode_Selected" xml:space="preserve">
    <value>Normal Mode Selected</value>
  </data>
  <data name="ModelCheckingForm_CheckBox_POR_CheckedChanged_Partial_Order_Reduction_Selected" xml:space="preserve">
    <value>Partial Order Reduction Selected</value>
  </data>
  <data name="ModelCheckingForm_CheckBox_POR_CheckedChanged_Partial_Order_Reduction_UnSelected" xml:space="preserve">
    <value>Partial Order Reduction UnSelected</value>
  </data>
  <data name="ModelCheckingForm_CheckBox_Parallel_CheckedChanged_Parallel_Verification_Selected" xml:space="preserve">
    <value>Parallel Verification Selected</value>
  </data>
  <data name="ModelCheckingForm_CheckBox_Parallel_CheckedChanged_Parallel_Verification_UnSelected" xml:space="preserve">
    <value>Parallel Verification UnSelected</value>
  </data>
  <data name="Apply_Zeno_Check_Selected" xml:space="preserve">
    <value>Apply Zeno Check Selected</value>
  </data>
  <data name="Apply_Zeno_Check_UnSelected" xml:space="preserve">
    <value>Apply Zeno Check UnSelected</value>
  </data>
  <data name="Shortest_Witness_Trace_Selected" xml:space="preserve">
    <value>Shortest Witness Trace Selected</value>
  </data>
  <data name="Shortest_Witness_Trace_UnSelected" xml:space="preserve">
    <value>Shortest Witness Trace UnSelected</value>
  </data>
  <data name="Please_wait_for_the_verification_to_stop_first__Otherwise_it_may_cause_exceptional_behaviors" xml:space="preserve">
    <value>Please wait for the verification to stop first! Otherwise it may cause exceptional behaviors.</value>
  </data>
  <data name="Ready" xml:space="preserve">
    <value>Ready</value>
  </data>
  <data name="You_have_following_options_" xml:space="preserve">
    <value>You have following options:</value>
  </data>
  <data name="_1__Click_the_Email_button_to_report_the_error_to_us_" xml:space="preserve">
    <value>1. Click the Email button to report the error to us.</value>
  </data>
  <data name="_2__Click_the_Continue_button_to_ingore_the_error_" xml:space="preserve">
    <value>2. Click the Continue button to ingore the error.</value>
  </data>
  <data name="_3__Click_the_Stop_button_to_exit_the_application_" xml:space="preserve">
    <value>3. Click the Stop button to exit the application.</value>
  </data>
  <data name="At_same_time__you_can_submit_your_model_to_us_by_using_model_submit_button_in_the_PAT_editor_" xml:space="preserve">
    <value>At same time, you can submit your model to us by using model submit button in the PAT editor.</value>
  </data>
  <data name="Email_is_sent_successfully_" xml:space="preserve">
    <value>Email is sent successfully.</value>
  </data>
  <data name="Email_can_not_be_sent__please_manual_email_the_exception_to_PAT_team_" xml:space="preserve">
    <value>Email can not be sent! please manual email the exception to PAT team.</value>
  </data>
  <data name="The_input_LTL_is_not_correct__" xml:space="preserve">
    <value>The input LTL is not correct: </value>
  </data>
  <data name="_1__Check_your_input_model_for_the_possiblity_of_errors_" xml:space="preserve">
    <value>1. Check your input model for the possiblity of errors.</value>
  </data>
  <data name="_2__Email_us_your_model_and_seek_for_help_" xml:space="preserve">
    <value>2. Email us your model and seek for help.</value>
  </data>
  <data name="This_error_suggests_your_model_is_ too_big_to_be_verified." xml:space="preserve">
    <value>1. This error suggests your model is too big to be verified. Please make sure all your variables are bounded. You can use domain range values to check it, e.g., "var x:{1..100}=0;". Alternatively you can simplify your model by using fewer events, simplier processes, and smaller constants and variables.</value>
  </data>
  <data name="Simulation_Cancelled" xml:space="preserve">
    <value>Simulation Cancelled</value>
  </data>
  <data name="Error_Happened" xml:space="preserve">
    <value>Error Happened</value>
  </data>
  <data name="Graph_Generated___0__Nodes___1__Edges" xml:space="preserve">
    <value>Graph Generated: {0} Nodes, {1} Edges</value>
  </data>
  <data name="The_simulation_is_forced_to_stop_due_to_the_huge_space_size" xml:space="preserve">
    <value>The simulation is forced to stop due to the huge space size ( &gt; {0} states)</value>
  </data>
  <data name="Simulation_Starting" xml:space="preserve">
    <value>Simulation Starting</value>
  </data>
  <data name="The_execution_of_the_step_will_destroy_the_current_trace__Do_you_want_to_continue_" xml:space="preserve">
    <value>The execution of the step will destroy the current trace. Do you want to continue?</value>
  </data>
  <data name="Warning" xml:space="preserve">
    <value>Warning</value>
  </data>
  <data name="Please_stop_verification_or_parsing_before_the_simulation_" xml:space="preserve">
    <value>Please stop verification or parsing before the simulation!</value>
  </data>
  <data name="Trace_Play_Starts___" xml:space="preserve">
    <value>Trace Play Starts...</value>
  </data>
  <data name="Please_select_a_row_in_trace_list_as_the_starting_point_" xml:space="preserve">
    <value>Please select a row in trace list as the starting point!</value>
  </data>
  <data name="Trace_Play_Stopped" xml:space="preserve">
    <value>Trace Play Stopped</value>
  </data>
  <data name="Trace_Play_Finished" xml:space="preserve">
    <value>Trace Play Finished</value>
  </data>
  <data name="Target_State" xml:space="preserve">
    <value>Target State</value>
  </data>
  <data name="Source_State" xml:space="preserve">
    <value>Source State</value>
  </data>
  <data name="Save_File" xml:space="preserve">
    <value>Save File</value>
  </data>
  <data name="No_duplicated_state_names_are_allowed_" xml:space="preserve">
    <value>No duplicated state names are allowed!</value>
  </data>
  <data name="Error" xml:space="preserve">
    <value>Error</value>
  </data>
  <data name="The_formula_is_a_safety_property__checked_in__0__s__" xml:space="preserve">
    <value>The formula is a safety property (checked in {0} s).</value>
  </data>
  <data name="Büchi_Automata_Generated_with__0__Nodes__1__Edges__checked_in__2__s__" xml:space="preserve">
    <value>Büchi Automata Generated with {0} Nodes {1} Edges (checked in {2} s).</value>
  </data>
  <data name="Rabin_Automata_Generated_with__0__Nodes__1__Edges__checked_in__2_s__" xml:space="preserve">
    <value>Rabin Automata Generated with {0} Nodes {1} Edges (checked in {2}s).</value>
  </data>
  <data name="Streett_Automata_Generated_with__0__Nodes__1__Edges__checked_in__2_s__" xml:space="preserve">
    <value>Streett Automata Generated with {0} Nodes {1} Edges (checked in {2}s).</value>
  </data>
  <data name="Verification_has_been_running_for__0__s" xml:space="preserve">
    <value>Verification has been running for {0} s</value>
  </data>
  <data name="Only_a_sequential_program_or_C__method_calls_can_be_associated_with_an_event_" xml:space="preserve">
    <value>Only a sequential program or C# method calls can be associated with an event.</value>
  </data>
  <data name="The_C__library__0__can_not_be_found_" xml:space="preserve">
    <value>The C# library {0} can not be found!</value>
  </data>
  <data name="The_expression_should_return_an_integer_value_" xml:space="preserve">
    <value>The expression should return an integer value!</value>
  </data>
  <data name="Variables___0___can_not_be_used_in_this_expression_" xml:space="preserve">
    <value>Variables ({0}) can not be used in this expression </value>
  </data>
  <data name="Can_NOT_find_the_method_" xml:space="preserve">
    <value>Can NOT find the method </value>
  </data>
  <data name="The_method_call__0__must_return_an_integer_value_" xml:space="preserve">
    <value>The method call {0} must return an integer value!</value>
  </data>
  <data name="The_expression__0__must_be_an_integer_expression_" xml:space="preserve">
    <value>The expression {0} must be an integer expression!</value>
  </data>
  <data name="The_variable__0__must_be_an_integer_variable_" xml:space="preserve">
    <value>The variable {0} must be an integer variable!</value>
  </data>
  <data name="The_static_method_call__0__must_return_an_integer_value_" xml:space="preserve">
    <value>The static method call {0} must return an integer value!</value>
  </data>
  <data name="The_variable__0__must_be_a_boolean_variable_" xml:space="preserve">
    <value>The variable {0} must be a boolean variable!</value>
  </data>
  <data name="The_static_method_call__0__must_return_a_boolean_value_" xml:space="preserve">
    <value>The static method call {0} must return a boolean value!</value>
  </data>
  <data name="The_method_call__0__must_return_a_boolean_value_" xml:space="preserve">
    <value>The method call {0} must return a boolean value!</value>
  </data>
  <data name="The_expression__0__must_be_a_boolean_expression_" xml:space="preserve">
    <value>The expression {0} must be a boolean expression!</value>
  </data>
  <data name="Can_NOT_find_the_method__0__with__1__parameters_in_the_imported_C__libraries_" xml:space="preserve">
    <value>Can NOT find the method {0} with {1} parameters in the imported C# libraries!</value>
  </data>
  <data name="Can_NOT_find_the_method__0__with__1__parameters_in_class__2__" xml:space="preserve">
    <value>Can NOT find the method {0} with {1} parameters in class {2}!</value>
  </data>
  <data name="Please_input_at_least_one_runnable_process__process_with_no_parameters__" xml:space="preserve">
    <value>Please input at least one runnable process (process with no parameters)!</value>
  </data>
  <data name="Please_stop_verification_or_simulation_before_parsing_the_model_" xml:space="preserve">
    <value>Please stop verification or simulation before parsing the model!</value>
  </data>
  <data name="Only_one_model_checking_window_can_be_open_at_a_time__Do_you_want_to_close_the_current_one_to_open_a_new_one_" xml:space="preserve">
    <value>Only one model checking window can be open at a time! Do you want to close the current one to open a new one?</value>
  </data>
  <data name="Please_input_at_least_one_assertion_" xml:space="preserve">
    <value>Please input at least one assertion!</value>
  </data>
  <assembly alias="System.Windows.Forms" name="System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" />
  <data name="Knight" type="System.Resources.ResXFileRef, System.Windows.Forms">
    <value>Resources\Knight.gif;System.Drawing.Bitmap, System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a</value>
  </data>
  <data name="ModuleFacadeBase_ShowSimulationWindow_Simulation_is_not_supported_in_this_module_">
    <value xml:space="preserve">Simulation is not supported in this module!</value>
  </data>
</root>